# Default values for dotnet-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dsopublic.azurecr.io/sample-dotnetcore-app
  pullPolicy: IfNotPresent
  # This is a mandatory input and must be passed in to helm install/upgrade command
  # tag: "v1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

appSettingsConfigMapName: ""

# Environment variables to be set in the pod
env: 
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://+:8080

# the volume and volume mounts for CSI driver will be automatically added to the deployment pod
azureSecrets:
  enabled: false
  usePodIdentity: "false"
  useVMManagedIdentity: "true"
  # MSI (client ID) with roles to authenticate to Azure Key Vault
  userAssignedIdentityId: "54d3-123-123-123-123123123123"
  # Tenant ID of the Azure Key Vault
  tenantId: "1323-123-123-123-123123123123"
  # Name of the key vault where the secrets are stored
  keyvaultName: "test-keyvault"
  # Unless specified the default is AzurePublicCloud
  cloudName: "AzurePublicCloud"

  secrets: 
    # Secrets should be in the form of env_var_name: keyvault_secret_name
    APPINSIGHTS_INSTRUMENTATIONKEY: appinsights-instrumentationkey
    CONNECTION_STRING: connection-string

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: "private-ingress"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: config
#   configMap:
#     name: sample-dotnetcore-app-cm
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: config
#   mountPath: "/app/properties"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
